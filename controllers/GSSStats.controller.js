const GSSStats = require("../models/GSSStats.model")


//Create GSS Record, saves to Database, ID is autogenerated by MongoDB, fiscalWeek must be unique
//Example Json Payload
// {
//     "fiscalWeek": "FW 13",
//     "overAll": 222,
//     "taste": 333,
//     "attentiveness": 444,
//     "onTime": 33,
//     "accuracy": 322,
//     "value": 883,
//     "rank": 929
// }
const createRecord = async ({_id,fiscalWeek,overAll,taste,attentiveness,onTime,accuracy,value,rank,category}) => {
    try{
        const gssStats = new GSSStats({
            _id,
            fiscalWeek,
            overAll,
            taste,
            attentiveness,
            onTime,
            accuracy,
            value, 
            rank,
            category
        });

        await gssStats.save() //saves states into database
        return gssStats._id
}
catch(err){
    console.error(err);
    throw{status: 400, message: err};
}

}

//Find all Records
const findAllRecords = async (limit =0) => {
    const record = await GSSStats.find();
    return record
}

//Find Record by ID
const findAllRecordById = async _id =>{
    try {
        const record = await GSSStats.findById({_id});
        if(GSSStats === null){
            throw `no record with id: ${_id} was found`;
        }
        return record;
    } catch (error) {
        console.log(error);
        throw {status: 404, message:`no record with id: ${_id} was found` }
        
    }
}

//Delete Record by Id
//http://localhost:8080/stats/63221d9cf1d706f141092c65
const DeleteRecordById = async _id =>{
    try {
        const record = await GSSStats.findById({_id});
        if(GSSStats === null){
        }
        return record.remove();

        
        
        
    } catch (error) {
        console.log(error);
        throw {status: 404, message:`no record with id: ${_id} was found` }
        
    }
}

const updateRecord = async({_id,fiscalWeek,overAll,taste,attentiveness,onTime,accuracy,value,rank,category})=>{
    try {
        const updates={_id,fiscalWeek,overAll,taste,attentiveness,onTime,accuracy,value,rank,category};
        const updatedRecord = await GSSStats.findByIdAndUpdate({_id}, updates,{new:true});
        return updatedRecord

        np
    } catch (err) {
        console.log(err);
        throw  {status: 404, message:`no record with id: ${_id} was found` }
        
    }
}






module.exports = {createRecord, findAllRecords, findAllRecordById, DeleteRecordById, updateRecord}