const Safety = require("../models/Safety.model")


//Create Labor Record, saves to Database, ID is autogenerated by MongoDB, fiscalWeek must be unique
//Example Json Payload
// {
//     "fiscalWeek": "FW 13",
//     "culinary": 222,
//     "service": 333,
//     "togo": 444,
//     "host": 33,
//     "bartender": 322,
    
// }
const createRecord = async ({
    _id,
    fiscalWeek,
    publicLiability,
    workersComp,
    smartSenseCompletion,
    compliancePercent,
    tqScore,
    category,
}) => {
    try{
        const record = new Safety({
            _id,
            fiscalWeek,
            publicLiability,
            workersComp,
            smartSenseCompletion,
            compliancePercent,
            tqScore,
            category,
        });

        await record.save() //saves states into database
        return record._id
}
catch(err){
    console.error(err);
    throw{status: 400, message: err};
}

}

//Find all Records
const findAllRecords = async (limit =0) => {
    const record = await Safety.find();
    return record
}

//Find Record by ID
const findAllRecordById = async _id =>{
    try {
        const record = await Safety.findById({_id});
        if(Safety === null){
            throw `no record with id: ${_id} was found`;
        }
        return record;
    } catch (error) {
        console.log(error);
        throw {status: 404, message:`no record with id: ${_id} was found` }
        
    }
}

//Delete Record by Id
//http://localhost:8080/labor/63221d9cf1d706f141092c65
const DeleteRecordById = async _id =>{
    try {
        const record = await Safety.findById({_id});
        if(Safety === null){
        }
        return record.remove();

        
        
        
    } catch (error) {
        console.log(error);
        throw {status: 404, message:`no record with id: ${_id} was found` }
        
    }
}

// {
//     "_id": "63237caa60fc3336ab6758f4",
//     "fiscalWeek": "FW 15",
//     "status": "Active",
//     "department": "Labor",
//     "description": "Kitchen",
//     "notes": "NOTES AND MORE NOTES;kjlj",
//     "__v": 0
// }
// Needs the ID inside body and in the url
// doesnt require all fields
//Update Record
const updateRecord = async({ 
    _id,
    fiscalWeek,
    publicLiability,
    workersComp,
    smartSenseCompletion,
    compliancePercent,
    tqScore,
    category

})=>{
    try {
        const updates={
            _id,fiscalWeek,
            publicLiability,
            workersComp,
            smartSenseCompletion,
            compliancePercent,
            tqScore,
            category,};
        const updatedRecord = await Safety.findByIdAndUpdate({_id}, updates,{new:true});
        return updatedRecord

        np
    } catch (err) {
        console.log(err);
        throw  {status: 404, message:`no record with id: ${_id} was found` }
        
    }
}








module.exports = {createRecord, findAllRecords, findAllRecordById, DeleteRecordById, updateRecord}